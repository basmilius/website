@use "../../css/api" as *;

.textButtonGrid {
    display: grid;
    margin-top: #{gutter-get(6)};
    gap: #{gutter-get(4)};
    grid-template-columns: repeat(3, 1fr);
}

.textButtonGroup {
    display: flex;
    align-items: flex-start;
    flex-flow: row wrap;
    justify-content: flex-start;
    gap: #{gutter-get(5)};
}

.textButtonGroupAlignToBottom {
    composes: textButtonGroup;

    margin-top: auto;
}

.textButtonStack {
    display: flex;
    align-items: flex-start;
    flex-flow: column;
    justify-content: flex-start;
    gap: #{gutter-get(5)};
}

.textButtonStackAlignToBottom {
    composes: textButtonStack;

    margin-top: auto;
}

.textButton {
    position: relative;
    display: inline-flex;
    padding: 0;
    gap: #{gutter-get(3)};
    align-items: center;
    align-self: flex-start;
    justify-self: flex-start;
    background: transparent;
    border: 0;
    border-radius: unset;
    color: #{color-get("gray")};
    font-weight: 600;
    line-height: 1;
    outline: 0;
    text-decoration: none;
    transition: 180ms var(--swiftOut);
    transition-property: color;
}

.textButtonIcon {
    position: relative;
    display: flex;
    height: 30px;
    width: 30px;
    align-items: center;
    justify-content: center;
    background: #{color-get("gray", 200, .5)};
    border-radius: 18px;
    color: #{color-get("gray")};
    font-size: 18px;
    transition: inherit;
    transition-property: background, color;

    svg {
        font-size: 16px;
        transition: inherit;
        transition-property: transform;
    }
}

.textButtonSmall {
    font-size: 16px;
}

.textButtonSmall .textButtonIcon {
    margin-top: -1px;
    height: 27px;
    width: 27px;

    svg {
        font-size: 15px;
    }
}

.textButton:hover,
.textButton:focus-visible {
    background: transparent;
    color: #{color-get("primary", 600)};

    .textButtonIcon {
        background: transparent;
        color: #{color-get("primary")};

        svg[data-icon="arrow-right-long"] {
            transform: translate3d(3px, 0, 0);
        }

        svg[data-icon="arrow-down-long"] {
            transform: translate3d(0, 3px, 0);
        }
    }
}

@include responsive-down(sm) {
    .textButtonGrid {
        grid-template-columns: repeat(2, 1fr);
    }

    .textButtonGroup {
        flex-flow: column;
    }
}
